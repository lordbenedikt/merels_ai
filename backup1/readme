# Mühle mit KI
Mühle ist ein in Deutschland weit verbreitetes Strategiespiel. Dieses Programm ist eine Umsetzung des Spiels mit Kotlin,
Javascript und HTML/CSS. Es ist möglich gegen einen Computerspieler anzutreten, welcher algorithmisch den besten Spielzug
berechnet.
###Spielregeln
Weiß spielt zuerst. In der ersten Spielphase wird abwechselnd je ein Spielstein auf ein freies Feld gesetzt, bis 
insgesamt je 9 Spielsteine eingesetzt wurden. In der nächsten Phase wird stattdessen je Zug ein eigener Spielstein auf
ein angrenzendes freies Feld bewegt. Wenn zu irgendeinem Zeitpunkt im Spielsteine eine Dreierreihe, genannt eine Mühle, 
bilden, kann der Spieler, welcher diese Reihe gebildet hat, einen Spielstein des Gegners aus dem Spiel nehmen. Dabei ist 
es nicht erlaubt einen Stein aus einer Mühle zu nehmen. Befindet sich allerdings jeder der gegnerischen Spielsteine in
einer Mühle, wird diese Regel ungültig und der zu nehmende Spielstein darf frei gewählt werden.
Sobald ein Spieler nur noch drei Spielsteine auf dem Feld hat, ist es ihm erlaubt mit seinen Spielsteinen auf ein 
beliebiges freies Feld zu springen, anstatt nur auf angrenzende Felder zu ziehen. Das Spiel endet, wenn einem Spieler 
entweder kein gültiger Zug mehr möglich ist, oder er weniger als drei Spielsteine übrig hat. 
Der jeweilige Spieler verliert das Spiel.

Unentschieden: Das Spiel endet auch, wenn dreimal hintereinander, die gleiche Abfolge von Spielzügen gemacht hat, oder
wenn 20 Spielzüge gemacht wurden, ohne das sich eine Mühle gebildet hat. In beiden Fällen endet das Spiel mit 
unentschieden.

###Spielsteuerung
Das Spiel wird ausschließlich mit der Maus gesteuert. Durch Anklicken eines Spielsteins, wird dieser angewählt. Durch
Klicken auf ein Spielfeld, wird der gewählte Spielstein auf dieses Feld gezogen, soweit gültig. Eingesetzt werden 
Spielsteine, durch Klicken auf ein freies Feld. Genommen werden Spielsteine durch Anklicken des jeweiligen Spielsteins.
Auf der rechten Seite befinden sich Buttons mit verschiedenen Funktionen:

- Best Move: Berechnet und spielt den bestmöglichen Zug des aktuellen Spielers
- Random: Macht einen zufälligen Zug
- Restart: Startert ein neues Spiel

Außerdem verrät die Anzeige, wer am Zug ist, welche Art von Spielzug gemacht werden muss, wie viele Spielsteine beide
Spieler auf dem Feld haben und eine heuristische Evaluation der Spielsituation.

###Genutzte Quellen:
https://en.wikipedia.org/wiki/Alpha%E2%80%93beta_pruning (Pseudocode zum Alphabeta-Algorithmus)
Herzberg Dominikus, BitBoard.Mühle.png: Erklärung zu Bitboars für Mühle auf Slack, 3.Juli 2020
http://zetcode.com/kotlin/writefile/ (zu schreiben und lesen von txt-Dokumenten in Kotlin)
