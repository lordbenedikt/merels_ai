/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package muehle

import io.javalin.Javalin
import io.javalin.http.Context

class App {
    val greeting: String
        get() {
            return "Hello world."
        }
}

fun main(args: Array<String>) {
    val app = Javalin.create { config ->                  //setting up server
        config.addStaticFiles("/public")
    }.start(7070)

    val test = listOf<Muehle>(Muehle(intArrayOf(0b1001100000, 0b11011), -1, -1, 0, 0),  //test1
            Muehle(intArrayOf(0b110000110000010, 0b1000001000000000100), -1, -1, 0, 0),  //test2
            Muehle(intArrayOf(0b10000110000000,0b100000100000000100),-1,-1,0,0),  //test3
            Muehle(intArrayOf(0b000010100001100100001000,0b10000000100000001000000),-1,-1,0,0),  //test4
            Muehle(intArrayOf(0b1000000000100001000000,0b10010000100),-1,-1,0,0))  //test5
    var m = Muehle(intArrayOf(0,0), -1, 1, 18, 1)

    app.get("/click") { ctx: Context ->
        val node = ctx.queryParam("node")?.toInt()
        m = m.click(node ?: -1)
        println(m.stats())
        ctx.result(m.toString())
    }
    app.get("/bestMove") { ctx: Context ->
        val turn = m.turn
        m = m.play(m.bestMove())
        if (m.turn == turn)
            m = m.play(m.bestMove())
        println(m.stats())
        ctx.result(m.toString())
    }
    app.get("/random") { ctx: Context ->

        m = m.play(m.randomMove())
        println(m.stats())
        ctx.result(m.toString())
    }
    app.get("/restart") { ctx: Context ->
        Muehle.maxDepth = 3
        m = Muehle(IntArray(24), -1, 1, 18, 1)
        println(m.stats())
        ctx.result(m.toString())
    }
    app.get("/firstHuman") { ctx: Context ->
        Muehle.maxDepth = 3
        m = Muehle(IntArray(24), -1, 1, 18, 1)
        println(m.stats())
        ctx.result(m.toString())
    }
    app.get("/firstCom") { ctx: Context ->
        Muehle.maxDepth = 3
        m = Muehle(IntArray(24), -1, -1, 18, 1)
        println(m.stats())
        ctx.result(m.toString())
    }
    app.get("/turn90") { ctx: Context ->
        m = m.turn90()
        println(m.stats())
        ctx.result(m.toString())
    }
    app.get("/mirror") { ctx: Context ->
        m = m.mirror()
        println(m.stats())
        ctx.result(m.toString())
    }
    app.get("/invert") { ctx: Context ->
        m = m.invert()
        println(m.stats())
        ctx.result(m.toString())
    }
    app.get("/undo") { ctx: Context ->
        m = m.undo()
        println(m.stats())
        ctx.result(m.toString())
    }
    app.get("/calculate") { ctx: Context ->
        m.buildDatabase()
        ctx.result(m.toString())
    }
    app.get("/saveData") { ctx: Context ->
        m.saveData()
        ctx.result(m.toString())
    }
    app.get("/emptyHashmap") { ctx: Context ->
        m.emptyHashmap()
        ctx.result(m.toString())
    }
    app.get("/endgame") { ctx: Context ->
        m.endgame()
        ctx.result(m.toString())
    }
    app.get("/test1") { ctx: Context ->
        Muehle.maxDepth = 1
        m = test[0]
        ctx.result(m.toString())
    }
    app.get("/test2") { ctx: Context ->
        Muehle.maxDepth = 2
        m = test[1]
        ctx.result(m.toString())
    }
    app.get("/test3") { ctx: Context ->
        Muehle.maxDepth = 3
        m = test[2]
        ctx.result(m.toString())
    }
    app.get("/test4") { ctx: Context ->
        Muehle.maxDepth = 4
        m = test[3]
        ctx.result(m.toString())
    }
    app.get("/test5") { ctx: Context ->
        Muehle.maxDepth = 5
        m = test[4]
        ctx.result(m.toString())
    }
}

